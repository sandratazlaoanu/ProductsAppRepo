'use strict';

var xsenv = require('@sap/xsenv');

module.exports = {
  getCredentials: function(serviceName, ignoreDots) {
    try {
      return xsenv.cfServiceCredentials(function (service) {
        var vcapSrvServiceName;
        if (service.credentials && service.credentials['sap.cloud.service.alias']) {
          vcapSrvServiceName = ignoreDots ? service.credentials['sap.cloud.service.alias'].replace(/\./g, '') : service.credentials['sap.cloud.service.alias'];
          if (vcapSrvServiceName === serviceName) {
            return true;
          }
        }

        if (service.credentials && service.credentials['sap.cloud.service']) {
          vcapSrvServiceName = ignoreDots ? service.credentials['sap.cloud.service'].replace(/\./g, '') : service.credentials['sap.cloud.service'];
          if (vcapSrvServiceName === serviceName) {
            return true;
          }
        }

        if (service.tags) {
          for (var i = 0; i < service.tags.length; i++) {
            vcapSrvServiceName = ignoreDots ? service.tags[i].replace(/\./g, '') : service.tags[i];
            if (serviceName === vcapSrvServiceName) {
              return true;
            }
          }
        }
        return false;
      });
    }
    catch (e) {
      return null;
    }
  },

  getEndPoint: function (serviceCredentials, endPointName) {
    var endPoint = {};
    if (endPointName) {
      if (serviceCredentials.endpoints) {
        if (typeof(serviceCredentials.endpoints[endPointName]) === 'string') {
          endPoint.url = serviceCredentials.endpoints[endPointName] + '/';
        } else if (typeof(serviceCredentials.endpoints[endPointName]) === 'object') {
          endPoint.url = serviceCredentials.endpoints[endPointName].url;
          endPoint.timeout = serviceCredentials.endpoints[endPointName].timeout;
        }
      }
      if (serviceCredentials[endPointName]) {
        if (typeof(serviceCredentials[endPointName]) === 'string') {
          endPoint.url = serviceCredentials[endPointName] + '/';
        } else if (typeof(serviceCredentials[endPointName]) === 'object'){
          endPoint.url = serviceCredentials[endPointName].url;
          endPoint.timeout = serviceCredentials[endPointName].timeout;
        }
      }
    } else {
      endPoint.url =  serviceCredentials.url ? serviceCredentials.url + '/' : serviceCredentials.uri + '/';
    }
    endPoint.timeout = endPoint.timeout ? endPoint.timeout : 30000;
    return endPoint;
  },

  getGrantType: function (serviceCredentials){
    if (serviceCredentials.grant_type){
      return serviceCredentials.grant_type;
    }
    return 'user_token';
  }
};
